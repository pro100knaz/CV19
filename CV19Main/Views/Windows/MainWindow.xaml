<Window x:Class="CV19Main.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CV19Main"
        xmlns:cmd="clr-namespace:CV19Main.Infrastructure.Commands"
        xmlns:vm="clr-namespace:CV19Main.ViewModels"
        xmlns:decanat="clr-namespace:CV19Main.Models.Decanat"

        xmlns:fa="http://schemas.fontawesome.com/icons/"
        xmlns:oxy="http://oxyplot.org/wpf"
        xmlns:series="clr-namespace:OxyPlot.Series;assembly=OxyPlot"

        mc:Ignorable="d"
        Title="{Binding Path= Title}" 
        Height="450" Width="800">
    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="Q">
            <KeyBinding.Command>
                <cmd:CloseApplicationCommand></cmd:CloseApplicationCommand>
            </KeyBinding.Command>
        </KeyBinding>
    </Window.InputBindings>

    <Window.Resources>
        <cmd:CloseApplicationCommand x:Key="CloseApplicationCommand"/>
    </Window.Resources>

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="Файл">
                <!--<MenuItem Header="Выход" Command="{Binding CloseApplicationCommand}"/>-->
                <MenuItem Header="Выход" Command="{StaticResource CloseApplicationCommand}">

                    <!--<MenuItem.Command>
                        <cmd:CloseApplicationCommand/>
                    </MenuItem.Command>-->


                    <!--ORRRR добавляем элемент в ресурсы приложения и используем его отттудаааааа-->
                </MenuItem>
            </MenuItem>
            <MenuItem Header="пОМОЩЬ">
                <MenuItem Header=" О программе"/>
            </MenuItem>
            <MenuItem Command="{Binding PageIndexChangeCommand}" CommandParameter="-1">
                <MenuItem.Header>
                    <fa:ImageAwesome Icon="Regular_ArrowAltCircleLeft" Height="20"></fa:ImageAwesome>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem Command="{Binding PageIndexChangeCommand}" CommandParameter="+1">
                <MenuItem.Header>
                    <fa:ImageAwesome Icon="Regular_ArrowAltCircleRight" Height="20"></fa:ImageAwesome>
                </MenuItem.Header>
            </MenuItem>
        </Menu>

        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock Text="{Binding Title}"/>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="{Binding Status }" ToolTip="slmsefkmlkesfemlkesf"/>
            </StatusBarItem>
            <StatusBarItem>
                <ProgressBar Width="120" Height="14" Value="23"></ProgressBar>
            </StatusBarItem>
        </StatusBar>
        <TabControl SelectedIndex="{Binding SelectedPageIndex}">


            <TabItem Header="Students">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="250"/>

                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="Grupps">
                        <DockPanel>
                            <DockPanel.Resources>
                                <CollectionViewSource x:Key="GroupsCollection" 
                                                      Source="{Binding Groups}"
                                                      Filter="GroupsCollectionFilter"/>
                            </DockPanel.Resources>
                            <DockPanel DockPanel.Dock="Top">
                                        <fa:ImageAwesome Height="12" Icon="Solid_Search" Margin="2,0,3,0"/>
                                        <TextBlock Text="Фильтры:"/>
                                        <TextBox Name="GroupNameFilterText" 
                                                 TextChanged="OnGroupsFilterTextChanged"/>
                            </DockPanel>
                                    <UniformGrid DockPanel.Dock="Bottom" Rows="1" Margin=" 3,5">
                                <UniformGrid.Resources>
                                    <Style x:Key="BtnStyle" TargetType="Button">
                                        <Setter Property="Margin" Value="3, 0"/>
                                        <Setter Property="Padding" Value="3, 5"/>
                                        <Setter Property="Background" Value="White"/>
                                    </Style>
                                </UniformGrid.Resources>
                                        <Button Content="Добавить" Style="{StaticResource BtnStyle}" Command="{Binding CreateNewGroupCommand}"/>
                                        <Button Content="Удалить" Style="{StaticResource BtnStyle}" Command="{Binding DeleteGroupCpmmand}" 
                                                CommandParameter="{Binding SelectedGroup}"/>
                            </UniformGrid>
                            <ListBox
                            ItemsSource="{Binding Source={StaticResource GroupsCollection}}" SelectedIndex="0" 
                             SelectedItem="{Binding SelectedGroup}"
                            VirtualizingPanel.IsContainerVirtualizable="True"
                            VirtualizingPanel.IsVirtualizing="True"
                            VirtualizingPanel.VirtualizationMode="Recycling">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                    <ListBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type decanat:Group}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Name}" Name="TextView"/>
                                            <TextBlock Text="{Binding Students.Count, StringFormat=[Студентов: {0}]}" Margin="3,0,0,0"/>
                                        </StackPanel>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Students.Count}" Value="0">
                                                <Setter TargetName="TextView" Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </DockPanel>
                    </GroupBox>
                    <GroupBox Header="{Binding SelectedGroup.Name, FallbackValue= 'студенты' , TargetNullValue='Группа не выьрана'}" Grid.Column="1">
                        <DockPanel>
                            <DockPanel DockPanel.Dock="Top"  Margin="0,2">
                                <fa:ImageAwesome Height="12" Icon="Solid_Search" Margin="2,0,3,0"/>
                                <TextBox/>
                            </DockPanel>
                            <DataGrid ItemsSource="{Binding SelectedGroup.Students}" AutoGenerateColumns="False"
                                      VerticalGridLinesBrush="Bisque"
                                      GridLinesVisibility="Vertical"
                                      AlternatingRowBackground="BurlyWood"
                                      CanUserAddRows="False"
                                      EnableRowVirtualization="True">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Фамилия" Binding="{Binding SureName}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Рейтинг" Binding="{Binding Rating}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Дата Рождения" Binding="{Binding Birthday , StringFormat=dd.MM.yyyy}"/>
                                <DataGridTextColumn Header="Дата Рождения" Binding="{Binding Birthday}"/>
                                <DataGridTemplateColumn Header="Дата Рождения Template">
                                    <!--<DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type decanat:Student}">
                                            <DatePicker SelectedDate="{Binding Birthday}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>-->
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type decanat:Student}">
                                            <TextBlock Text="{Binding Birthday, StringFormat='dd.MM.yyyy'}"></TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate DataType="{x:Type decanat:Student}">
                                            <DatePicker SelectedDate="{Binding Birthday}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Группа" Binding="{Binding DataContext.SelectedGroup.Name, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                                <DataGridTextColumn Header="Заметки" Binding="{Binding Description}" Width="*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                            </DockPanel>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="ГРАФИК" Visibility="Collapsed">


                <DockPanel LastChildFill="True">
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">

                        <Button x:Name="addAxes" HorizontalAlignment="Stretch" Width="40" Height="40" VerticalAlignment="Stretch"  Content="AddAxes" CommandParameter="{Binding ElementName=Plot}">
                            <Button.Command>
                                <cmd:AddAxesCommand></cmd:AddAxesCommand>
                            </Button.Command>
                        </Button>
                        <Button x:Name="addLines" HorizontalAlignment="Stretch" Width="40" Height="40" VerticalAlignment="Stretch" Content="AddLines" CommandParameter="{Binding ElementName=Plot}">
                            <Button.Command>
                                <cmd:AddLinesCommand></cmd:AddLinesCommand>
                            </Button.Command>
                        </Button>
                    </StackPanel>
                    <oxy:PlotView x:Name="Plot" DockPanel.Dock="Bottom"/>
                </DockPanel>

                <!--<series:LineSeries ItemsSource="{Binding TestDataPoints}" DataFieldX="x" DataFieldY="y"/>-->
            </TabItem>
            <TabItem Visibility="Collapsed">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <fa:ImageAwesome Icon="Regular_File" Height="17" Foreground="Red"/>
                        <TextBlock Text="Вкладка 1" Padding="4,2"></TextBlock>

                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="53*"/>
                        <RowDefinition Height="65*"/>
                        <RowDefinition Height="270*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="95*"/>
                        <ColumnDefinition Width="60*"/>
                        <ColumnDefinition Width="639*"/>
                    </Grid.ColumnDefinitions>

                    <Ellipse Grid.Column="2" Fill="Aqua">
                        <Ellipse.InputBindings>

                            <!--Команды для обьектов котроые их не поддерживают только таким образом можно дделать !!!!!!!!!-->
                            <MouseBinding MouseAction="LeftClick">
                                <MouseBinding.Command>
                                    <cmd:CloseApplicationCommand/>
                                </MouseBinding.Command>
                            </MouseBinding>
                        </Ellipse.InputBindings>
                    </Ellipse>
                    <Ellipse Grid.Column="2" Margin="309,0,28,0" Fill="Brown"/>
                    <Button Style="{x:Null}" Grid.Column="2" Content="Button" HorizontalAlignment="Left" Margin="201,103,0,0" Grid.Row="2" VerticalAlignment="Top" Height="83" Width="154"/>

                </Grid>
            </TabItem>
            <TabItem Header="Вкладка 2" Visibility="Collapsed">
            <Button Width=" 20" Height="200" VerticalAlignment="Center" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5">

                    <Button.Background>
                        <SolidColorBrush Color="White" x:Name="ButtonBrush"/>
                    </Button.Background>
                    <Button.RenderTransform>
                        <RotateTransform x:Name="ButtonRotate"/>    
                    </Button.RenderTransform>
                        <Button.Triggers >
                        
                            <EventTrigger RoutedEvent="Button.Click">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonRotate"
                                                         Storyboard.TargetProperty="Angle"
                                                         From="0" To="360"
                                                         Duration="0:0:1"
                                                         AutoReverse="True">

                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                                <EventTrigger RoutedEvent="Button.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="ButtonBrush"
                                                        Storyboard.TargetProperty="Color"
                                                        Duration="0:0:0.1"
                                                        To="Red"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="ButtonBrush"
                                                        Storyboard.TargetProperty="Color"
                                                        Duration="0:0:3"
                                                        To="White"/>
                                    </Storyboard>
                                </BeginStoryboard>
                        </EventTrigger>

                    </Button.Triggers>
                    </Button>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
